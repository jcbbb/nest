services:
  api:
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    build:
      dockerfile: Dockerfile
      context: .
      target: production
    volumes:
      - ./src:/app/src
    environment:
      PORT: ${PORT}
      NODE_ENV: ${NODE_ENV}
      POSTGRES_URI: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: ${JWT_EXPIRATION}
    ports:
      - ${PORT}:${PORT}
  redis:
    image: redis
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 1s
      timeout: 3s
      retries: 10
    volumes:
      - redis:/data
  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}" ]
      interval: 1s
      timeout: 3s
      retries: 10
    volumes:
      - docker-nest-postgres:/var/lib/postgresql/data
volumes:
  redis:
    driver: local
  docker-nest-postgres:
